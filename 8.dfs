def dfs(graph, node, visited=None):
    if visited is None:
        visited = set()  # Set to keep track of visited nodes

    visited.add(node)  # Mark the current node as visited
    print(node, end=" ")  # Print the node

    # Visit all unvisited neighbors of the current node
    for neighbor in graph[node]:
        if neighbor not in visited:
            dfs(graph, neighbor, visited)

# Example usage:
# Graph represented as an adjacency list
graph = {
    'A': ['B', 'C'],
    'B': ['A', 'D', 'E'],
    'C': ['A', 'F'],
    'D': ['B'],
    'E': ['B', 'F'],
    'F': ['C', 'E']
}

# Perform DFS starting from node 'A'
print("DFS Traversal starting from node A:")
dfs(graph, 'A')
